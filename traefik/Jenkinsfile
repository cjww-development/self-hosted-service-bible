pipeline {
	agent {
		docker {
			image 'docker:latest'
			args '-v /var/run/docker.sock:/var/run/docker.sock -v /docker-container-config:/docker-container-config'
		}
	}
	options {
		ansiColor('xterm')
	}
	environment {
    SERVICE = "traefik"
    HTTP_INTERFACE_BIND = "0.0.0.0"
		DOCKER_SOCKET = "/var/run/docker.sock"
		TRAEFIK_DOMAIN = credentials("traefik-domain")
	}
  parameters {
		booleanParam(
			name: 'Deploy',
			defaultValue: false,
			description: 'Only deploy the service'
		)
		booleanParam(
			name: 'Update',
			defaultValue: false,
			description: 'Only update and restart the service'
		)
		booleanParam(
			name: 'Restart',
			defaultValue: false,
			description: 'Only restart the service'
		)
		booleanParam(
			name: 'Destroy',
			defaultValue: false,
			description: 'Destroy the service'
		)
		booleanParam(
			name: 'Shutdown',
			defaultValue: false,
			description: 'Shutdown the service'
		)
		booleanParam(
			name: 'Nuke',
			defaultValue: false,
			description: 'Destroy containers, networks and volumes'
		)
	}
	stages {
		stage("Pull Traefik images") {
			when {
				expression {
					params.Deploy || params.Update
				}
			}
			steps {
				script {
					sh """
						cd $SERVICE
						docker compose pull
          """
				}
			}
		}
		stage("Deploy updated configuration") {
			steps {
				script {
          sh """
						cd $SERVICE
						mkdir -p /docker-container-config/traefik/dynamic
						
						cp traefik.yml /docker-container-config/traefik/traefik.yml
						cp tls-certs.toml /docker-container-config/traefik/dynamic/tls-certs.toml
					"""
				}
			}
		}
		stage("Deploy Traefik stack") {
			when {
				expression {
					params.Deploy || params.Update
				}
			}
			steps {
				script {
					sh """
						cd $SERVICE
						docker compose up -d --remove-orphans
          """
				}
			}
		}
		stage("Restart Traefik stack") {
			when {
				expression {
					params.Restart
				}
			}
			steps {
				script {
					sh """
						cd $SERVICE
						docker compose restart
          """
				}
			}
		}
		stage("Shutdown Traefik stack") {
			when {
				expression {
					params.Shutdown
				}
			}
			steps {
				script {
					sh """
						cd $SERVICE
						docker compose down
          """
				}
			}
		}
		stage("Nuke Traefik stack") {
			when {
				expression {
					params.Nuke
				}
			}
			steps {
				script {
					sh """
						cd $SERVICE
						docker compose down -v
          """
				}
			}
		}
	}
	post {
		always {
			cleanWs()
		}
	}
}
