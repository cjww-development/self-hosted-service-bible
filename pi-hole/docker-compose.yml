version: '3.7'

volumes:
  pi_hole_conf:
    name: pi_hole_conf
  pi_hole_dnsmasq:
    name: pi_hole_dnsmasq

networks:
  pi_hole_net:
    name: pi_hole_net

services:
  pihole:
    image: pihole/pihole:$VERSION
    container_name: pihole
    hostname: $PIHOLE_HOST_NAME
    environment:
      - TZ=$TZ
      - WEBPASSWORD=$WEBPASSWORD
      - FTLCONF_LOCAL_IPV4=$FTLCONF_LOCAL_IPV4
      - PIHOLE_DNS_=$PIHOLE_DNS
      - DNSSEC=$DNSSEC
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - TEMPERATUREUNIT=$TEMPERATUREUNIT
    expose:
      - 80
      - 443
    ports: 
      - $DNS_INTERFACE_BIND:$DNS_PORT:53/tcp
      - $DNS_INTERFACE_BIND:$DNS_PORT:53/udp
    volumes:
      - pi_hole_conf:/etc/pihole
      - pi_hole_dnsmasq:/etc/dnsmasq.d
    networks:
      - pi_hole_net
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
    restart: always

  pihole_backup:
    image: jareware/docker-volume-backup:$DVB_TAG
    container_name: $DVB_CONTAINER_NAME
    environment:
      AWS_S3_BUCKET_NAME: $AWS_S3_BUCKET_NAME
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      BACKUP_FILENAME: pihole.tar.gz
    volumes:
      - pi_hole_conf:/backup/pi_hole_conf
      - pi_hole_dnsmasq:/backup/pi_hole_dnsmasq
      - $DOCKER_SOCKET:/var/run/docker.sock:ro
    labels:
      - "diun.enable=true"
    restart: always
