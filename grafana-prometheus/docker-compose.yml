version: '3.7'

volumes:
  prometheus_conf:
    name: prometheus_conf
  prometheus_data:
    name: prometheus_data
  alertmanager_conf:
    name: alertmanager_conf
  grafana_conf:
    name: grafana_conf
  
networks:
  monitoring_net:
    name: monitoring_net

services:
  grafana:
    image: grafana/grafana:$GRAFANA_VERSION
    container_name: grafana
    hostname: $GRAFANA_HOST_NAME
    environment:
      - GF_SECURITY_ADMIN_USER=$GRAFANA_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD=$GRAFANA_ADMIN_PASSWORD
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring_net
    volumes:
      - grafana_conf:/var/lib/grafana
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`$GRAFANA_DOMAIN`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: always

  node_exporter:
    image: prom/node-exporter:$NODE_EXPORTER_VERSION
    container_name: node-exporter
    hostname: $NODE_EXPORTER_HOST_NAME
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - $PROC_PATH:/host/proc:ro
      - $SYS_PATH:/host/sys:ro
      - $ROOT_FS_PATH:/rootfs:ro
    networks:
      - monitoring_net
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.enable=true"
      - "traefik.http.routers.nodeexporter.rule=Host(`$NODE_EXPORTER_DOMAIN`)"
      - "traefik.http.routers.nodeexporter.entrypoints=websecure"
      - "traefik.http.routers.nodeexporter.tls=true"
      - "traefik.http.services.nodeexporter.loadbalancer.server.port=9100"
    restart: always

  prometheus:
    image: prom/prometheus:$PROMETHEUS_VERSION
    container_name: prometheus
    hostname: $PROMETHEUS_HOST_NAME
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=${RETENTION_TIME}'
      - '--web.enable-lifecycle'
    volumes:
      - prometheus_conf:/etc/prometheus
      - prometheus_data:/prometheus
      - /docker-container-config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_net
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`$PROMETHEUS_DOMAIN`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: always

  alertmanager:
    image: prom/alertmanager:$ALERT_MANAGER_VERSION
    container_name: alertmanager
    hostname: $ALERT_MANAGER_HOST_NAME
    # command:
    #   - '--config.file=/etc/alertmanager/config.yml'
    #   - '--storage.path=/alertmanager'
    networks:
      - monitoring_net
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`$ALERT_MANAGER_DOMAIN`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
    restart: always

  grafana_prometheus_backup:
    image: jareware/docker-volume-backup:$DVB_VERSION
    container_name: grafana_prometheus_backup
    environment:
      AWS_S3_BUCKET_NAME: $AWS_S3_BUCKET_NAME
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      BACKUP_FILENAME: grafana-prometheus.tar.gz
    volumes:
      - prometheus_conf:/backup/prometheus_conf
      - prometheus_data:/backup/prometheus_data
      - alertmanager_conf:/backup/alertmanager_conf
      - grafana_conf:/backup/grafana_conf
      - $DOCKER_SOCKET:/var/run/docker.sock:ro
    labels:
      - "diun.enable=true"
    restart: always
    