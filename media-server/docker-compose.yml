version: '3.7'

volumes:
  prowlarr:
    name: prowlarr
  sonarr:
    name: sonarr
  radarr:
    name: radarr
  transmission:
    name: transmission

networks:
  media_server_net:
    name: media_server_net

services:
  expressvpn:
    image: polkaned/expressvpn:$EXPRESS_VPN_TAG
    container_name: expressvpn
    hostname: $EXPRESS_VPN_HOST_NAME
    environment:
      - ACTIVATION_CODE=$EXPRESS_VPN_ACTIVATION_CODE
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    privileged: true
    tty: true
    expose:
      - 8090
      - 6881
      - 8080
      - 9117
      - 8989
      - 7878
      - 8686
      - 9696
      - 9091
      - 51413
    # ports:
    #   # QBT UI Port
    #   - $INTERFACE_BIND:8090:8090
    #   # Bittorrent port
    #   - $INTERFACE_BIND:6881:6881
    #   - $INTERFACE_BIND:6881:6881/udp
    #   # Web port
    #   - $INTERFACE_BIND:8086:8080
    #   - $INTERFACE_BIND:9117:9117
    #   # Sonarr port
    #   - $INTERFACE_BIND:8989:8989
    #   # Radarr port
    #   - $INTERFACE_BIND:7878:7878
    #   # Lidarr port
    #   - $INTERFACE_BIND:8686:8686
    #   # Prowlarr port
    #   - $INTERFACE_BIND:9696:9696
    #   # Transmission
    #   - $INTERFACE_BIND:9091:9091
    #   - $INTERFACE_BIND:51413:51413
    #   - $INTERFACE_BIND:51413:51413/udp
    command: /bin/bash
    networks:
      - media_server_net
    labels:
      - "diun.enable=true"
    restart: always

  transmission:
    image: lscr.io/linuxserver/transmission:$TRANSMISSION_TAG
    container_name: transmission
    environment:
      - PUID=$USER_ID
      - PGID=$GROUP_ID
      - TZ=$TZ
      - TRANSMISSION_WEB_HOME=/combustion-release/
      - USER=$TRANSMISSION_USERNAME
      - PASS=$TRANSMISSION_PASSWORD
    volumes:
      - transmission:/config
      - $DOWNLOAD_PATH:/downloads
    # Route egress traffic through VPN container
    network_mode: service:expressvpn
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
    restart: always

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:$PROWLARR_TAG
    container_name: prowlarr
    environment:
      - PUID=$USER_ID
      - PGID=$GROUP_ID
      - TZ=$TZ
    volumes:
      - prowlarr:/config
    # Route egress traffic through VPN container
    network_mode: service:expressvpn
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:$SONARR_TAG
    container_name: sonarr
    environment:
      - PUID=$USER_ID
      - PGID=$GROUP_ID
      - TZ=$TZ
    volumes:
      - sonarr:/config
      - $MEDIA_PATH/tv:/tv
      - $DOWNLOAD_PATH:/downloads #optional
    # Route egress traffic through VPN container
    network_mode: service:expressvpn
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
    restart: always

  radarr:
    image: lscr.io/linuxserver/radarr:$RADARR_TAG
    container_name: radarr
    environment:
      - PUID=$USER_ID
      - PGID=$GROUP_ID
      - TZ=$TZ
    volumes:
      - radarr:/config
      - $MEDIA_PATH/movies:/movies
      - $DOWNLOAD_PATH:/downloads
    # Route egress traffic through VPN container
    network_mode: service:expressvpn
    labels:
      - "diun.enable=true"
      - "docker-volume-backup.stop-during-backup=true"
    restart: always

  plex-media-server:
    image: lscr.io/linuxserver/plex:$PLEX_TAG
    container_name: plex
    # hostname: $PLEX_HOST_NAME
    # ports:
    #   - $INTERFACE_BIND:32400:32400/tcp
    #   - $INTERFACE_BIND:3005:3005/tcp
    #   - $INTERFACE_BIND:8324:8324/tcp
    #   - $INTERFACE_BIND:32469:32469/tcp
    #   - $INTERFACE_BIND:1900:1900/udp
    #   - $INTERFACE_BIND:32410:32410/udp
    #   - $INTERFACE_BIND:32412:32412/udp
    #   - $INTERFACE_BIND:32413:32413/udp
    #   - $INTERFACE_BIND:32414:32414/udp
    environment:
      - PUID=$USER_ID
      - PGID=$GROUP_ID
      - VERSION=docker
      - name=$PLEX_CLAIM
    volumes:
      - $MEDIA_PATH/tv:/plex-media/tv
      - $MEDIA_PATH/movies:/plex-media/movies
    # networks:
    #   - media_server_net
    network_mode: host
    labels:
      - "diun.enable=true"
    restart: always

  pihole_backup:
    image: jareware/docker-volume-backup:$DVB_TAG
    container_name: $DVB_CONTAINER_NAME
    hostname: $DVB_HOST_NAME
    environment:
      AWS_S3_BUCKET_NAME: $AWS_S3_BUCKET_NAME
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      BACKUP_FILENAME: pihole.tar.gz
    volumes:
      - transmission:/backup/transmission
      - prowlarr:/backup/prowlarr
      - sonarr:/backup/sonarr
      - radarr:/backup/radarr
      - $DOCKER_SOCKET:/var/run/docker.sock:ro
    labels:
      - "diun.enable=true"
    restart: always